# Redirect any http:// request to https://www.example.com
server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name {{ site_domain }};
  rewrite ^(.*) https://{{ site_domain }}$request_uri permanent;
}

server {
    listen 443 default_server ssl;
    listen [::]:443 default_server ssl;
    server_name {{ site_domain }};
    root {{ alaveteli_path }}/public;

    client_max_body_size 15M;

    server_tokens off;

    #try_files $uri/index.html $uri @alaveteli;

    access_log /var/log/nginx/alaveteli_ssl_access.log;
    error_log /var/log/nginx/alaveteli_ssl_error.log error;

    location /download {
        internal;
        alias {{ alaveteli_path }}/cache/zips/production/download;
    }

    ssl_certificate /etc/letsencrypt/live/{{ site_domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ site_domain }}/privkey.pem;
    # ssl_ciphers ECDHE-RSA-AES256-SHA384:AES256-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH:!AESGCM;
    # secure default from https://docs.nginx.com/nginx/admin-guide/security-controls/terminating-ssl-http/#setting-up-an-https-server
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;

    passenger_enabled on;
}
